     1                                  bits		64
     2                                  default 	rel
     3                                  	global    main                
     4                                  	extern    printf              
     5                                  	extern    getch               
     6                                  	extern    ExitProcess         
     7                                  	extern    scanf               
     8                                  
     9                                  segment  .data
    10 00000000 256320256320256320-     	fmt 	db 	"%c %c %c %c", 0xd, 0xa,"%c %c %c %c", 0xd, 0xa,"%c %c %c %c", 0xd, 0xa,"%c %c %c %c", 0xd, 0xa, 0
    10 00000009 25630D0A2563202563-
    10 00000012 2025632025630D0A25-
    10 0000001B 632025632025632025-
    10 00000024 630D0A256320256320-
    10 0000002D 25632025630D0A00   
    11 00000035 61000000                	resp	dd	"a"
    12                                  
    13                                  section .text
    14                                  main:                                 
    15                                  
    16 00000000 E850000000              	call 	readkey
    17                                  
    18                                  	
    19 00000005 E80A000000              	call	showoff
    20                                  	
    21                                  
    22 0000000A EBF4                    	jmp		main	
    23                                  
    24                                  
    25                                  
    26                                  shutdown: 
    27 0000000C 4831C0                  	xor 	rax, rax	
    28 0000000F E8(00000000)            	call 	ExitProcess
    29                                  showoff:
    30                                  		
    31                                  	
    32 00000014 BA31000000              	mov 	rdx, '1'		;1
    33 00000019 41B832000000            	mov 	r8, '2'			;2
    34 0000001F 41B933000000            	mov 	r9, '3'			;3
    35                                  
    36 00000025 55                      	push 	rbp
    37 00000026 4889E5                  	mov 	rbp, rsp
    38                                  	
    39                                  
    40 00000029 6A67                    	push	'g';
    41 0000002B 6A66                    	push	'f';
    42 0000002D 6A65                    	push	'e';
    43 0000002F 6A64                    	push	'd';
    44                                  
    45 00000031 6A63                    	push	'c';
    46 00000033 6A62                    	push	'b';
    47 00000035 6A61                    	push	'a';
    48 00000037 6A39                    	push	'9';
    49                                  
    50 00000039 6A38                    	push	'8';
    51 0000003B 6A37                    	push	'7';
    52 0000003D 6A36                    	push	'6';
    53 0000003F 6A35                    	push	'5';
    54                                  
    55 00000041 6A34                    	push	'4';			;4
    56                                  
    57 00000043 4883EC20                	sub 	rsp, 32
    58                                  	
    59                                  	 
    60 00000047 488D0D(00000000)        	lea 	rcx, [fmt]
    61                                  
    62                                  
    63 0000004E E8(00000000)            	call 	printf
    64 00000053 C9                      	leave
    65 00000054 C3                      	ret
    66                                  
    67                                  readkey:
    68 00000055 55                      	push 	rbp
    69 00000056 4889E5                  	mov 	rbp, rsp
    70 00000059 4883EC20                	sub 	rsp, 32
    71 0000005D E8(00000000)            	call	getch
    72 00000062 488905(35000000)        	mov		[resp], rax
    73 00000069 833D(35000000)73        	cmp		dword [resp], 's'
    74 00000070 749A                    	je		shutdown
    75 00000072 C9                      	leave
    76 00000073 C3                      	ret
    77                                  
    78                                  factorial:
    79 00000074 55                      	push 	rbp
    80 00000075 4889E5                  	mov 	rbp, rsp
    81 00000078 4883EC20                	sub 	rsp, 32
    82 0000007C 85C9                    	test 	ecx, ecx ; n
    83 0000007E 7416                    	jz 	.zero
    84 00000080 BB01000000              	mov 	ebx, 1 ; counter c
    85 00000085 B801000000              	mov 	eax, 1 ; result
    86 0000008A FFC1                    	inc 	ecx
    87                                  
    88                                  .for_loop:
    89 0000008C 39CB                    	cmp 	ebx, ecx
    90 0000008E 740B                    	je 	.end_loop
    91 00000090 F7E3                    	mul 	ebx ; multiply ebx * eax and store in eax
    92 00000092 FFC3                    	inc 	ebx ; ++c
    93 00000094 EBF6                    	jmp 	.for_loop
    94                                  
    95                                  .zero:
    96 00000096 B801000000              	mov 	eax, 1
    97                                  
    98                                  .end_loop:
    99 0000009B C9                      	leave
   100 0000009C C3                      	ret
